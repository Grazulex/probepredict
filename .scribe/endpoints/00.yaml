name: 'User management'
description: 'APIs for managing users'
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/auth/register
    metadata:
      groupName: 'User management'
      groupDescription: 'APIs for managing users'
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user'
      description: 'Register a new user'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: accusantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: iparisian@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: aperiam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      c_password:
        name: c_password
        description: 'The value and <code>password</code> must match.'
        required: true
        example: quae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: accusantium
      email: iparisian@example.com
      password: aperiam
      c_password: quae
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/login
    metadata:
      groupName: 'User management'
      groupDescription: 'APIs for managing users'
      subgroup: ''
      subgroupDescription: ''
      title: 'Login a user'
      description: 'Login a user and return a token'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'User email'
        required: true
        example: ylemke@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'User password'
        required: true
        example: 'iDU?/lP-n#'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: ylemke@example.org
      password: 'iDU?/lP-n#'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"token": "yourtoken", "roles": "hhhh", "name": "john doe"}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"error": "Unauthorised"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
