POST http://{{host}}/api/v1/auth/login HTTP/1.1
accept: application/json
content-type: application/json

{
  "email": "jms@grazulex.be",
  "password": "password"
}

> {%
client.test("Status code is 200", function() {
    client.assert(response.status === 200, "Expected 200 OK");
});
client.global.set("token", response.body.token);
%}
###
POST http://{{host}}/api/v1/probe-types HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

{
  "name": "{{$random.alphanumeric(15)}}",
  "description": "Test Probe Type"
}

> {%
client.test("Status code is 201", function() {
    client.assert(response.status === 201, "Expected 201 Created");
});
client.global.set("probe_type_id", response.body.id);
%}
###
GET http://{{host}}/api/v1/probe-types HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

> {%
client.test("Status code is 200", function() {
    client.assert(response.status === 200, "Expected 200 OK");
});
  %}
###
GET http://{{host}}/api/v1/probe-types/{{probe_type_id}} HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

> {%
client.test("Status code is 200", function() {
    client.assert(response.status === 200, "Expected 200 OK");
});
  %}
###
POST http://{{host}}/api/v1/metric-types HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

{
  "name": "{{$random.alphanumeric(15)}}",
  "description": "Test metric Type",
  "unit": "CÂ°"

}

> {%
client.test("Status code is 201", function() {
    client.assert(response.status === 201, "Expected 201 Created");
});
client.global.set("metric_type_id", response.body.id);
%}
###
GET http://{{host}}/api/v1/metric-types HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

> {%
client.test("Status code is 200", function() {
    client.assert(response.status === 200, "Expected 200 OK");
});
  %}
###
GET http://{{host}}/api/v1/metric-types/{{metric_type_id}} HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

> {%
client.test("Status code is 200", function() {
    client.assert(response.status === 200, "Expected 200 OK");
});
  %}
###
POST http://{{host}}/api/v1/probes HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

{
  "name": "{{$random.alphanumeric(15)}}",
  "description": "blablabla",
  "probe_type_id": 1
}

> {%
client.test("Status code is 201", function() {
    client.assert(response.status === 201, "Expected 201 Created");
});
client.global.set("probe_id", response.body.id);
%}
###
PUT http://{{host}}/api/v1/probes/{{probe_id}} HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

{
  "name": "{{$random.alphanumeric(15)}}",
  "description": "blablabla2",
  "probe_type_id": 1
}

> {%
client.test("Status code is 200", function() {
    client.assert(response.status === 200, "Expected 200 OK");
});
%}
###
GET http://{{host}}/api/v1/probes HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

> {%
client.test("Status code is 200", function() {
    client.assert(response.status === 200, "Expected 200 OK");
});
  %}
###
GET http://{{host}}/api/v1/probes/{{probe_id}} HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

> {%
client.test("Status code is 200", function() {
    client.assert(response.status === 200, "Expected 200 OK");
});
  %}
###
POST http://{{host}}/api/v1/rules HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

{
  "condition": "10",
  "operator": "<",
  "metric_type_id": {{metric_type_id}},
  "probe_id": {{probe_id}}
}

> {%
client.test("Status code is 201", function() {
    client.assert(response.status === 201, "Expected 201 Created");
});
client.global.set("rule_id", response.body.id);
%}
###
PUT http://{{host}}/api/v1/rules/{{rule_id}} HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

{
  "condition": "20",
  "operator": "<",
  "metric_type_id": {{metric_type_id}},
  "probe_id": {{probe_id}}
}

> {%
client.test("Status code is 200", function() {
    client.assert(response.status === 200, "Expected 200 OK");
});
%}
###
POST http://{{host}}/api/v1/metrics HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

{
  "value": 50,
  "metric_type_id": {{metric_type_id}},
  "probe_id": {{probe_id}}
}

> {%
    client.test("Status code is 201", function() {
        client.assert(response.status === 201, "Expected 201 Created");
    });
    client.global.set("metric_id", response.body.id);
%}
###
POST http://{{host}}/api/v1/metrics HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

{
  "value": 45,
  "metric_type_id": {{metric_type_id}},
  "probe_id": {{probe_id}}
}

> {%
    client.test("Status code is 201", function() {
        client.assert(response.status === 201, "Expected 201 Created");
    });
    client.global.set("metric_id", response.body.id);
%}
###
GET http://{{host}}/api/v1/probes/{{probe_id}} HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}
###

DELETE http://{{host}}/api/v1/metrics/{{metric_id}} HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

> {%
    client.test("Status code is 204", function() {
        client.assert(response.status === 204, "Expected 204 No Content");
    });
%}

###

DELETE http://{{host}}/api/v1/probes/{{probe_id}} HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

> {%
    client.test("Status code is 204", function() {
        client.assert(response.status === 204, "Expected 204 No Content");
    });
%}

###
DELETE http://{{host}}/api/v1/metric-types/{{metric_type_id}} HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

> {%
    client.test("Status code is 204", function() {
        client.assert(response.status === 204, "Expected 204 No Content");
    });
%}
###
DELETE http://{{host}}/api/v1/probe-types/{{probe_type_id}} HTTP/1.1
accept: application/json
content-type: application/json
authorization: Bearer {{token}}

> {%
    client.test("Status code is 204", function() {
        client.assert(response.status === 204, "Expected 204 No Content");
    });
%}